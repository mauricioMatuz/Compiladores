Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NAMESPACE
    USING

Grammar

Rule 0     S' -> declaration
Rule 1     declaration -> HASH INCLUDE LESS STD ID POINT ID GREATER
Rule 2     var_declaration -> type_specifier ID SEMICOLON
Rule 3     var_declaration -> type_specifier ID COMMA ID SEMICOLON
Rule 4     var_declaration -> type_specifier ID EQUAL NUMBER SEMICOLON
Rule 5     var_declaration -> type_specifier ID EQUAL var SEMICOLON
Rule 6     var_declaration -> type_specifier ID LBRACKET NUMBER RBRACKET SEMICOLON
Rule 7     type_specifier -> INT
Rule 8     type_specifier -> VOID
Rule 9     type_specifier -> STRING
Rule 10    fun_declaration -> type_specifier ID LPAREN RPAREN LBLOCK RBLOCK
Rule 11    params -> param_list
Rule 12    params -> VOID
Rule 13    param_list -> param_list COMMA param
Rule 14    param_list -> param
Rule 15    param_list -> empty
Rule 16    param -> type_specifier ID
Rule 17    param -> type_specifier ID LBRACKET RBRACKET
Rule 18    compount_stmt -> LBLOCK local_declarations statement_list RBLOCK
Rule 19    local_declarations -> local_declarations var_declaration
Rule 20    local_declarations -> empty
Rule 21    statement_list -> statement_list statement
Rule 22    statement_list -> empty
Rule 23    statement -> expression_stmt
Rule 24    statement -> compount_stmt
Rule 25    statement -> selection_stmt
Rule 26    statement -> iteration_stmt
Rule 27    statement -> return_stmt
Rule 28    expression_stmt -> expression SEMICOLON
Rule 29    expression_stmt -> SEMICOLON
Rule 30    expression_stmt -> PRINTF LGREATER QUOTES ID QUOTES SEMICOLON
Rule 31    expression_stmt -> PRINTF LGREATER QUOTES ID QUOTES LGREATER ENDL SEMICOLON
Rule 32    expression_stmt -> PRINTF LGREATER STRING SEMICOLON
Rule 33    expression_stmt -> PRINTF LGREATER STRING LGREATER ENDL SEMICOLON
Rule 34    expression_stmt -> PRINTF LGREATER var SEMICOLON
Rule 35    expression_stmt -> PRINTF LGREATER var LGREATER ENDL SEMICOLON
Rule 36    expression_stmt -> PRINTF LGREATER var LGREATER var SEMICOLON
Rule 37    expression_stmt -> PRINTF LGREATER var LGREATER var LGREATER ENDL SEMICOLON
Rule 38    expression_stmt -> CIN RGREATER var SEMICOLON
Rule 39    expression_stmt -> CIN RGREATER var RGREATER var SEMICOLON
Rule 40    expression_stmt -> CIN POINT GET LPAREN RPAREN SEMICOLON
Rule 41    expression_stmt -> ID PLUSPLUS
Rule 42    expression_stmt -> PLUSPLUS ID
Rule 43    expression_stmt -> ID MINUSMINUS
Rule 44    expression_stmt -> MINUSMINUS ID
Rule 45    selection_stmt -> IF LPAREN expression RPAREN statement
Rule 46    selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement
Rule 47    iteration_stmt -> WHILE LPAREN expression RPAREN statement
Rule 48    iteration_stmt -> <empty>
Rule 49    iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON expression RPAREN statement
Rule 50    iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement
Rule 51    iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement
Rule 52    iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement
Rule 53    iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement
Rule 54    return_stmt -> RETURN SEMICOLON
Rule 55    return_stmt -> RETURN expression SEMICOLON
Rule 56    expression -> var EQUAL expression
Rule 57    expression -> simple_expression
Rule 58    var -> ID
Rule 59    var -> ID LBRACKET expression RBRACKET
Rule 60    simple_expression -> additive_expression relop additive_expression
Rule 61    simple_expression -> additive_expression
Rule 62    relop -> LESS
Rule 63    relop -> LESSEQUAL
Rule 64    relop -> GREATER
Rule 65    relop -> GREATEREQUAL
Rule 66    relop -> DEQUAL
Rule 67    relop -> DISTINT
Rule 68    relop -> QUOTES
Rule 69    additive_expression -> additive_expression addop term
Rule 70    additive_expression -> term
Rule 71    addop -> PLUS
Rule 72    addop -> MINUS
Rule 73    term -> term mulop factor
Rule 74    term -> factor
Rule 75    mulop -> TIMES
Rule 76    mulop -> DIVIDE
Rule 77    factor -> LPAREN expression RPAREN
Rule 78    factor -> var
Rule 79    factor -> call
Rule 80    factor -> NUMBER
Rule 81    call -> ID LPAREN args RPAREN
Rule 82    args -> args_list
Rule 83    args -> empty
Rule 84    args_list -> args_list COMMA expression
Rule 85    args_list -> expression
Rule 86    empty -> <empty>

Terminals, with rules where they appear

CIN                  : 38 39 40
COMMA                : 3 13 84
DEQUAL               : 66
DISTINT              : 67
DIVIDE               : 76
ELSE                 : 46
ENDL                 : 31 33 35 37
EQUAL                : 4 5 56
FOR                  : 49 50 51 52 53
GET                  : 40
GREATER              : 1 64
GREATEREQUAL         : 65
HASH                 : 1
ID                   : 1 1 2 3 3 4 5 6 10 16 17 30 31 41 42 43 44 58 59 81
IF                   : 45 46
INCLUDE              : 1
INT                  : 7
LBLOCK               : 10 18
LBRACKET             : 6 17 59
LESS                 : 1 62
LESSEQUAL            : 63
LGREATER             : 30 31 31 32 33 33 34 35 35 36 36 37 37 37
LPAREN               : 10 40 45 46 47 49 50 51 52 53 77 81
MINUS                : 72
MINUSMINUS           : 43 44 52 53
NAMESPACE            : 
NUMBER               : 4 6 80
PLUS                 : 71
PLUSPLUS             : 41 42 50 51
POINT                : 1 40
PRINTF               : 30 31 32 33 34 35 36 37
QUOTES               : 30 30 31 31 68
RBLOCK               : 10 18
RBRACKET             : 6 17 59
RETURN               : 54 55
RGREATER             : 38 39 39
RPAREN               : 10 40 45 46 47 49 50 51 52 53 77 81
SEMICOLON            : 2 3 4 5 6 28 29 30 31 32 33 34 35 36 37 38 39 40 49 49 50 50 51 51 52 52 53 53 54 55
STD                  : 1
STRING               : 9 32 33
TIMES                : 75
USING                : 
VOID                 : 8 12
WHILE                : 47
error                : 

Nonterminals, with rules where they appear

additive_expression  : 60 60 61 69
addop                : 69
args                 : 81
args_list            : 82 84
call                 : 79
compount_stmt        : 24
declaration          : 0
empty                : 15 20 22 83
expression           : 28 45 46 47 49 49 50 51 52 53 55 56 59 77 84 85
expression_stmt      : 23
factor               : 73 74
fun_declaration      : 
iteration_stmt       : 26
local_declarations   : 18 19
mulop                : 73
param                : 13 14
param_list           : 11 13
params               : 
relop                : 60
return_stmt          : 27
selection_stmt       : 25
simple_expression    : 57
statement            : 21 45 46 46 47 49 50 51 52 53
statement_list       : 18 21
term                 : 69 70 73
type_specifier       : 2 3 4 5 6 10 16 17
var                  : 5 34 35 36 36 37 37 38 39 39 49 50 50 51 51 52 52 53 53 56 78
var_declaration      : 19

Parsing method: LALR

state 0

    (0) S' -> . declaration
    (1) declaration -> . HASH INCLUDE LESS STD ID POINT ID GREATER

    HASH            shift and go to state 2

    declaration                    shift and go to state 1

state 1

    (0) S' -> declaration .



state 2

    (1) declaration -> HASH . INCLUDE LESS STD ID POINT ID GREATER

    INCLUDE         shift and go to state 3


state 3

    (1) declaration -> HASH INCLUDE . LESS STD ID POINT ID GREATER

    LESS            shift and go to state 4


state 4

    (1) declaration -> HASH INCLUDE LESS . STD ID POINT ID GREATER

    STD             shift and go to state 5


state 5

    (1) declaration -> HASH INCLUDE LESS STD . ID POINT ID GREATER

    ID              shift and go to state 6


state 6

    (1) declaration -> HASH INCLUDE LESS STD ID . POINT ID GREATER

    POINT           shift and go to state 7


state 7

    (1) declaration -> HASH INCLUDE LESS STD ID POINT . ID GREATER

    ID              shift and go to state 8


state 8

    (1) declaration -> HASH INCLUDE LESS STD ID POINT ID . GREATER

    GREATER         shift and go to state 9


state 9

    (1) declaration -> HASH INCLUDE LESS STD ID POINT ID GREATER .

    $end            reduce using rule 1 (declaration -> HASH INCLUDE LESS STD ID POINT ID GREATER .)

